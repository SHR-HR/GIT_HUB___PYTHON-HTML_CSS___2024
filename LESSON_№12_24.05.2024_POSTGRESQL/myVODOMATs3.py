# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
"""""
–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –î–û–ú–ê–®–ù–ï–ô –†–ê–ë–û–¢–´: 18 –ú–ê–Ø 2024 –≥–æ–¥–∞.
"""""
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
'''
                                              –î–û–ú–ê–®–ù–Ø–Ø –†–ê–ë–û–¢–ê

                                            –ö—É—Ä—Å: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Python, —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –§—Ä–µ–π–º–≤–æ—Ä–∫–∞ Django
                                                                            –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: –¢–µ–æ—Ä–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö. PostgreSQL

                                        üëáüèª –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞–Ω–∏—è:

üëâüèª –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 1.
–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ –ø–∏—Ç–æ–Ω–µ.
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
'''
–£—Ä–æ–∫ –æ—Ç 17.05.2024 - —É—á–∏—Ç–µ–ª—å –ú–∞—Ä–∞—Ç –î—É–º–∞–Ω –ê—Ä–¥–∞–∫—É–ª—ã
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
'''üëáüèª         –í–ê–†–ò–ê–ù–¢ –ö–û–î–ê ‚Ññ3         üëáüèª'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #

import psycopg2
from psycopg2 import OperationalError, IntegrityError
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏ –≤—ã–≤–æ–¥–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø—Ä–æ—Ü–µ—Å—Å–∞—Ö –∏ –æ—à–∏–±–∫–∞—Ö
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

def connect_db():
    """ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. """
    try:
        return psycopg2.connect(
            dbname="myVODOMATs",
            user="postgres",
            password="admin",
            host="localhost",
            port="5432"
        )
    except OperationalError as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
        return None

def query_db(query, params=None, fetch=False):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç SQL –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∑–∞–ø—Ä–æ—Å–æ–≤.
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—ã–±–æ—Ä–∫—É –¥–∞–Ω–Ω—ã—Ö.
    """
    conn = connect_db()
    if conn is None:
        return
    try:
        cur = conn.cursor()
        cur.execute(query, params)
        if fetch:
            result = cur.fetchall()
            cur.close()
            conn.close()
            return result
        else:
            conn.commit()
            cur.close()
            conn.close()
    except IntegrityError as e:
        logging.error(f"–û—à–∏–±–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
        conn.rollback()
    except Exception as e:
        logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
        conn.rollback()

def create_vending_machine(location, status, install_date):
    """
    –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –≤–æ–¥–æ–º–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
    –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
    """
    try:
        query_db("INSERT INTO vending_machines (location, status, installation_date) VALUES (%s, %s, %s)",
                 (location, status, install_date))
        logging.info(f"–í–æ–¥–æ–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {location}, —Å—Ç–∞—Ç—É—Å - {status}, –¥–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ - {install_date}")
    except Exception as e:
        logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–¥–æ–º–∞—Ç: {e}")

def get_vending_machines():
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å.
    """
    machines = query_db("SELECT * FROM vending_machines", fetch=True)
    logging.info("–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω.")
    for machine in machines:
        print(machine)
    return machines

def update_vending_machine(id, status):
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ –ø–æ –µ–≥–æ ID.
    –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
    """
    query_db("UPDATE vending_machines SET status = %s WHERE id = %s", (status, id))
    logging.info(f"–°—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ —Å ID {id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {status}")

def delete_vending_machine(id):
    """
    –£–¥–∞–ª—è–µ—Ç –≤–æ–¥–æ–º–∞—Ç –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.
    –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
    """
    query_db("DELETE FROM inventory WHERE vending_machine_id = %s", (id,))
    query_db("DELETE FROM vending_machines WHERE id = %s", (id,))
    logging.info(f"–í–æ–¥–æ–º–∞—Ç —Å ID {id} –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —É–¥–∞–ª–µ–Ω—ã")

def main():
    """ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. """
    create_vending_machine('–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å', 'active', '2024-01-01')
    machines = get_vending_machines()
    update_vending_machine(1, 'maintenance')
    delete_vending_machine(1)

if __name__ == "__main__":
    main()

# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
#   –Ø –ü–û–î–£–ú–ê–õ, –ë–´–õ–û –ë–´ –ü–û–õ–ï–ó–ù–û –î–õ–Ø –°–ï–ë–Ø (–Ω—É –∏ –≤ —Ü–µ–ª–æ–º, –¥–ª—è –í–∞—Å - —Ä–∞—Å–ø–∏—Å–∞—Ç—å –∫–æ–¥, –ø–æ–ø—ã—Ç–∞—Ç—å—Å—è –µ–≥–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å –ø–æ —à–∞–≥–∞–º).   #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #

# –®–∞–≥ ‚Ññ1. - –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è

# import psycopg2
# from psycopg2 import OperationalError, IntegrityError
# import logging

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# import psycopg2: –ò–º–ø–æ—Ä—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ psycopg2, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL.
# from psycopg2 import OperationalError, IntegrityError: –ò–º–ø–æ—Ä—Ç –¥–≤—É—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π (OperationalError –∏ IntegrityError),
# –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
# import logging: –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è logging –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –∂—É—Ä–Ω–∞–ª–∞ —Å–æ–±—ã—Ç–∏–π.



# –®–∞–≥ ‚Ññ2. - –§—É–Ω–∫—Ü–∏—è connect_db()

# def connect_db():
#     """ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. """
#     try:
#         return psycopg2.connect(
#             dbname="myVODOMATs",
#             user="postgres",
#             password="admin",
#             host="localhost",
#             port="5432"
#         )
#     except OperationalError as e:
#         logging.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
#         return None

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# def connect_db():: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ connect_db, –∫–æ—Ç–æ—Ä–∞—è —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö PostgreSQL.
# """ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–µ –æ—à–∏–±–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è. """: –ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏.
# try: ... except OperationalError as e: ...: –ë–ª–æ–∫ try-except –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
# –ï—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—à–∏–±–∫–∞ OperationalError, –æ–Ω–∞ –±—É–¥–µ—Ç –∑–∞–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∞.



# –®–∞–≥ ‚Ññ3. - –§—É–Ω–∫—Ü–∏—è query_db()

# def query_db(query, params=None, fetch=False):
#     """
#     –í—ã–ø–æ–ª–Ω—è–µ—Ç SQL –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
#     –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∏—Å–∫–ª—é—á–µ–Ω–∏—è, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º –∑–∞–ø—Ä–æ—Å–æ–≤.
#     –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤ –Ω–∞ –≤—ã–±–æ—Ä–∫—É –¥–∞–Ω–Ω—ã—Ö.
#     """
#     conn = connect_db()
#     if conn is None:
#         return
#     try:
#         cur = conn.cursor()
#         cur.execute(query, params)
#         if fetch:
#             result = cur.fetchall()
#             cur.close()
#             conn.close()
#             return result
#         else:
#             conn.commit()
#             cur.close()
#             conn.close()
#     except IntegrityError as e:
#         logging.error(f"–û—à–∏–±–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")
#         conn.rollback()
#     except Exception as e:
#         logging.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}")
#         conn.rollback()

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# def query_db(query, params=None, fetch=False):: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ query_db,
# –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç SQL-–∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
# """ –í—ã–ø–æ–ª–Ω—è–µ—Ç SQL –∑–∞–ø—Ä–æ—Å—ã –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö... """: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –æ–ø–∏—Å—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é.
# conn = connect_db(): –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ connect_db.
# try: ... except IntegrityError as e: ... except Exception as e: ...: –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤.
# –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–∞—é—Ç –æ—à–∏–±–∫–∏ IntegrityError, –æ–Ω–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è –∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π (rollback).
# –û–±—â–∏–µ –æ—à–∏–±–∫–∏ –ª–æ–≥–∏—Ä—É—é—Ç—Å—è —Ç–∞–∫–∂–µ, –∏ —Ç–∞–∫–∂–µ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –æ—Ç–∫–∞—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π.



# –®–∞–≥ ‚Ññ4. - –§—É–Ω–∫—Ü–∏—è create_vending_machine()

# def create_vending_machine(location, status, install_date):
#     """
#     –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –≤–æ–¥–æ–º–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
#     –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
#     """
#     try:
#         query_db("INSERT INTO vending_machines (location, status, installation_date) VALUES (%s, %s, %s)",
#                  (location, status, install_date))
#         logging.info(f"–í–æ–¥–æ–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω: {location}, —Å—Ç–∞—Ç—É—Å - {status}, –¥–∞—Ç–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ - {install_date}")
#     except Exception as e:
#         logging.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–¥–æ–º–∞—Ç: {e}")

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# def create_vending_machine(location, status, install_date)::
# –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ create_vending_machine, –∫–æ—Ç–æ—Ä–∞—è –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –≤–æ–¥–æ–º–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
# """ –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π –≤–æ–¥–æ–º–∞—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö... """: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –æ–ø–∏—Å—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é.
# try: ... except Exception as e: ...: –ë–ª–æ–∫ try-except –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –æ—à–∏–±–æ–∫ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤–æ–¥–æ–º–∞—Ç–∞.
# –ï—Å–ª–∏ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –æ—à–∏–±–∫–∞, –æ–Ω–∞ –ª–æ–≥–∏—Ä—É–µ—Ç—Å—è.



# –®–∞–≥ ‚Ññ5. - –§—É–Ω–∫—Ü–∏—è get_vending_machines()

# def get_vending_machines():
#     """
#     –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å.
#     """
#     machines = query_db("SELECT * FROM vending_machines", fetch=True)
#     logging.info("–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω.")
#     for machine in machines:
#         print(machine)
#     return machines

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# def get_vending_machines():: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ get_vending_machines,
# –∫–æ—Ç–æ—Ä–∞—è –ø–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å.
# """ –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥–∏—Ç –∏—Ö –≤ –∫–æ–Ω—Å–æ–ª—å... """:
# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –æ–ø–∏—Å—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é.
# machines = query_db("SELECT * FROM vending_machines", fetch=True):
# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π –∏–∑ —Ç–∞–±–ª–∏—Ü—ã vending_machines.
# –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é machines.
# logging.info("–ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω."): –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞.



# –®–∞–≥ ‚Ññ6. - –§—É–Ω–∫—Ü–∏—è update_vending_machine()

# def update_vending_machine(id, status):
#     """
#     –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ –ø–æ –µ–≥–æ ID.
#     –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.
#     """
#     query_db("UPDATE vending_machines SET status = %s WHERE id = %s", (status, id))
#     logging.info(f"–°—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ —Å ID {id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {status}")

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# def update_vending_machine(id, status):: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ update_vending_machine,
# –∫–æ—Ç–æ—Ä–∞—è –æ–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
# """ –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ –ø–æ –µ–≥–æ ID... """: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –æ–ø–∏—Å—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é.
# query_db("UPDATE vending_machines SET status = %s WHERE id = %s", (status, id)):
# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–æ–¥–æ–º–∞—Ç–∞. –ó–Ω–∞—á–µ–Ω–∏—è –∑–∞–º–µ–Ω—è—é—Ç—Å—è –Ω–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã status –∏ id.
# logging.info(f"–°—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ —Å ID {id} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞ {status}"): –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–æ–¥–æ–º–∞—Ç–∞.



# –®–∞–≥ ‚Ññ7. - –§—É–Ω–∫—Ü–∏—è delete_vending_machine()

# def delete_vending_machine(id):
#     """
#     –£–¥–∞–ª—è–µ—Ç –≤–æ–¥–æ–º–∞—Ç –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.
#     –õ–æ–≥–∏—Ä—É–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —É–¥–∞–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.
#     """
#     query_db("DELETE FROM inventory WHERE vending_machine_id = %s", (id,))
#     query_db("DELETE FROM vending_machines WHERE id = %s", (id,))
#     logging.info(f"–í–æ–¥–æ–º–∞—Ç —Å ID {id} –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —É–¥–∞–ª–µ–Ω—ã")

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# def delete_vending_machine(id):: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ delete_vending_machine,
# –∫–æ—Ç–æ—Ä–∞—è —É–¥–∞–ª—è–µ—Ç –≤–æ–¥–æ–º–∞—Ç –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –Ω–∏–º –∑–∞–ø–∏—Å–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ.
# """ –£–¥–∞–ª—è–µ—Ç –≤–æ–¥–æ–º–∞—Ç –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ... """: –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –æ–ø–∏—Å—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é.
# query_db("DELETE FROM inventory WHERE vending_machine_id = %s", (id,)): –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
# –∑–∞–ø–∏—Å–µ–π –≤ –∏–Ω–≤–µ–Ω—Ç–∞—Ä–µ, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –≤–æ–¥–æ–º–∞—Ç–æ–º, –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
# query_db("DELETE FROM vending_machines WHERE id = %s", (id,)):
# –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ SQL-–∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥–æ–º–∞—Ç–∞ –ø–æ –µ–≥–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É.
# logging.info(f"–í–æ–¥–æ–º–∞—Ç —Å ID {id} –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∏ —É–¥–∞–ª–µ–Ω—ã"):
# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥–æ–º–∞—Ç–∞ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º –∑–∞–ø–∏—Å–µ–π.



# –®–∞–≥ ‚Ññ8. - –§—É–Ω–∫—Ü–∏—è main()

# def main():
#     """ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. """
#     create_vending_machine('–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å', 'active', '2024-01-01')
#     machines = get_vending_machines()
#     update_vending_machine(1, 'maintenance')
#     delete_vending_machine(1)

# –û–ø–∏—Å–∞–Ω–∏–µ:
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~
# def main():: –û–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ main, –∫–æ—Ç–æ—Ä–∞—è —Å–ª—É–∂–∏—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
# """ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–π —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. """:
# –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞, –æ–ø–∏—Å—ã–≤–∞—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—é.
# create_vending_machine('–ù–æ–≤—ã–π –∞–¥—Ä–µ—Å', 'active', '2024-01-01'):
# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ create_vending_machine() –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –≤–æ–¥–æ–º–∞—Ç–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
# machines = get_vending_machines():
# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_vending_machines() –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
# update_vending_machine(1, 'maintenance'):
# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ update_vending_machine() –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –≤–æ–¥–æ–º–∞—Ç–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º 1 –Ω–∞ 'maintenance'.
# delete_vending_machine(1):
# –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ delete_vending_machine() –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –≤–æ–¥–æ–º–∞—Ç–∞ —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º 1.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ò—Ç–∞–∫, –≤–µ—Å—å –∫–æ–¥ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö,
# –≤ –∫–æ—Ç–æ—Ä–æ–π —Ö—Ä–∞–Ω–∏—Ç—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤–æ–¥–æ–º–∞—Ç–∞—Ö. –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç –¥–æ–±–∞–≤–ª—è—Ç—å –Ω–æ–≤—ã–µ –≤–æ–¥–æ–º–∞—Ç—ã,
# –ø–æ–ª—É—á–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –≤–æ–¥–æ–º–∞—Ç–æ–≤, –æ–±–Ω–æ–≤–ª—è—Ç—å —Å—Ç–∞—Ç—É—Å –≤–æ–¥–æ–º–∞—Ç–∞ –∏ —É–¥–∞–ª—è—Ç—å –≤–æ–¥–æ–º–∞—Ç –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.
# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏ –æ—à–∏–±–æ–∫,
# —á—Ç–æ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –±–æ–ª–µ–µ —É–¥–æ–±–Ω–æ–µ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–¥–æ–º.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ò—Å—Ç–æ—á–Ω–∏–∫: google & habr-habr (reddit & github)
