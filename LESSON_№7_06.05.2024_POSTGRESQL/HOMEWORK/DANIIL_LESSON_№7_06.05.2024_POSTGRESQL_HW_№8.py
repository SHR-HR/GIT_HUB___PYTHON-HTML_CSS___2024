# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
"""""
–î–∞—Ç–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –î–û–ú–ê–®–ù–ï–ô –†–ê–ë–û–¢–´: 06 - 07 –ú–ê–Ø 2024 –≥–æ–¥–∞.
"""""
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
'''
                                              –î–û–ú–ê–®–ù–Ø–Ø –†–ê–ë–û–¢–ê

                                            –ö—É—Ä—Å: –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ Web-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –Ω–∞ Python, —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –§—Ä–µ–π–º–≤–æ—Ä–∫–∞ Django
                                                                            –î–∏—Å—Ü–∏–ø–ª–∏–Ω–∞: –¢–µ–æ—Ä–∏—è –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö. PostgreSQL

                                            –ü–æ–Ω—è—Ç–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
                                            –î–æ–º–∞—à–Ω—è—è —Ä–∞–±–æ—Ç–∞ ‚Ññ8:
                    (–ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞—é, —á—Ç–æ —Ç–µ–º–∞ –±—É–¥–µ—Ç —Ç–∞–∫–∞—è –∂–µ, –∫–∞–∫ –∏ –≤ –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –†–∞–±–æ—Ç–µ ‚Ññ8)
                             –ü–æ–Ω—è—Ç–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è. –ú–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ.

                                        üëáüèª –í—ã–ø–æ–ª–Ω–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –∑–∞–¥–∞–Ω–∏—è:

üëâüèª –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 1.
–°–æ–∑–¥–∞–π—Ç–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∑–∞—Ä–ø–ª–∞—Ç—ã.

üëâüèª –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 2.
–°–æ–∑–¥–∞–π—Ç–µ –∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç –¥–≤–µ —Ç–∞–±–ª–∏—Ü—ã - "–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏" –∏ "–ø–æ—Å—Ç—ã", –∏
–≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ö –ø–æ—Å—Ç–æ–≤.


üëâüèª –ó–∞–¥–∞–Ω–∏–µ ‚Ññ 3.
–°–æ–∑–¥–∞–π—Ç–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ, 
–∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å —Å—É–º–º–∞—Ä–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–±—â—É—é —Å—É–º–º—É –ø–æ –∫–∞–∂–¥–æ–º—É –º–µ—Å—è—Ü—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥.

üëâüèª –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ:
–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —Ç–∞–º –≥–¥–µ –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–ª—è—Ç—å, –≤—Å—Ç–∞–≤–ª—è—Ç—å, –æ–±–Ω–æ–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ.
üëâüèª (–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏)!!!!!
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
'''
–£—Ä–æ–∫ –æ—Ç 06.05.2024 - —É—á–∏—Ç–µ–ª—å –•—É—Å–Ω—É–ª–ª–∏–Ω –î–∞–Ω–∏–∏–ª –î–µ–Ω–∏—Å–æ–≤–∏—á.
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
from faker import Faker
import psycopg2
import random
from datetime import datetime, timedelta


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É PostgreSQL
connection = psycopg2.connect(
    host="localhost",
    user="postgres",
    password="admin",
    port="5432"
)

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def create_database():
    try:
        connection.set_isolation_level(psycopg2.extensions.ISOLATION_LEVEL_AUTOCOMMIT)
        cursor = connection.cursor()
        create_database_query = "CREATE DATABASE my_hw_ls_71_db"
        cursor.execute(create_database_query)
        print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö my_hw_ls_71_db —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
    except psycopg2.Error as e:
        print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö my_hw_ls_71_db:", e)
    finally:
        if connection:
            cursor.close()

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
create_database()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connection = psycopg2.connect(
    database="my_hw_ls_71_db",
    host="localhost",
    user="postgres",
    password="admin",
    port="5432"
)

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Employees
def create_employees_table():
    try:
        cursor = connection.cursor()
        create_table_query = """
            CREATE TABLE IF NOT EXISTS Employees (
                id SERIAL PRIMARY KEY,
                first_name VARCHAR(50),
                last_name VARCHAR(50),
                birth_date DATE,
                position VARCHAR(50),
                gender VARCHAR(10),
                marital_status VARCHAR(20),
                children BOOLEAN,
                country VARCHAR(50),
                city VARCHAR(50),
                salary NUMERIC
            );
        """
        cursor.execute(create_table_query)
        connection.commit()
        print("–¢–∞–±–ª–∏—Ü–∞ Employees —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–º–∏
        fake = Faker()
        for _ in range(10):  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
            first_name = fake.first_name()
            last_name = fake.last_name()
            birth_date = fake.date_of_birth(minimum_age=18, maximum_age=65)
            position = fake.job()
            gender = random.choice(["Male", "Female"])
            marital_status = random.choice(["Single", "Married"])
            children = random.choice([True, False])
            country = fake.country()
            city = fake.city()
            salary = round(random.uniform(1000, 5000), 2)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã
            insert_query = """
                INSERT INTO Employees (first_name, last_name, birth_date, position, gender, marital_status, children, country, city, salary)
                VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s);
            """
            cursor.execute(insert_query, (first_name, last_name, birth_date, position, gender, marital_status, children, country, city, salary))
        connection.commit()
        print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É Employees.")
    except psycopg2.Error as e:
        print("–û—à–∏–±–∫–∞:", e)
    finally:
        if connection:
            cursor.close()

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –µ—ë –¥–∞–Ω–Ω—ã–º–∏
create_employees_table()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Posts
def create_posts_table():
    try:
        cursor = connection.cursor()
        create_table_query = """
            CREATE TABLE IF NOT EXISTS Posts (
                id SERIAL PRIMARY KEY,
                employee_id INT REFERENCES Employees(id),
                post_count INT
            );
        """
        cursor.execute(create_table_query)
        connection.commit()
        print("–¢–∞–±–ª–∏—Ü–∞ Posts —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–º–∏
        for employee_id in range(1, 11):  # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
            post_count = random.randint(1, 10)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å—Ç–æ–≤
            insert_query = """
                INSERT INTO Posts (employee_id, post_count)
                VALUES (%s, %s);
            """
            cursor.execute(insert_query, (employee_id, post_count))
        connection.commit()
        print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É Posts.")
    except psycopg2.Error as e:
        print("–û—à–∏–±–∫–∞:", e)
    finally:
        if connection:
            cursor.close()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Orders
def create_orders_table():
    try:
        cursor = connection.cursor()
        create_table_query = """
            CREATE TABLE IF NOT EXISTS Orders (
                id SERIAL PRIMARY KEY,
                employee_id INT REFERENCES Employees(id),
                order_count INT,
                order_date DATE
            );
        """
        cursor.execute(create_table_query)
        connection.commit()
        print("–¢–∞–±–ª–∏—Ü–∞ Orders —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–º–∏
        fake = Faker()
        for employee_id in range(1, 11):  # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
            order_count = random.randint(1, 5)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤
            order_date = fake.date_time_between(start_date='-1y', end_date='now').date()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–∞—Ç—ã
            insert_query = """
                INSERT INTO Orders (employee_id, order_count, order_date)
                VALUES (%s, %s, %s);
            """
            cursor.execute(insert_query, (employee_id, order_count, order_date))
        connection.commit()
        print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É Orders.")
    except psycopg2.Error as e:
        print("–û—à–∏–±–∫–∞:", e)
    finally:
        if connection:
            cursor.close()


# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü –¥–ª—è –ø–æ—Å—Ç–æ–≤ –∏ –∑–∞–∫–∞–∑–æ–≤ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Ö –¥–∞–Ω–Ω—ã–º–∏
create_posts_table()
create_orders_table()

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∑–∞—Ä–ø–ª–∞—Ç—ã
def create_sorted_employees_view():
    try:
        cursor = connection.cursor()
        create_view_query = """
            CREATE OR REPLACE VIEW SortedEmployees AS
            SELECT * FROM Employees
            ORDER BY salary;
        """
        cursor.execute(create_view_query)
        connection.commit()
        print("–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ SortedEmployees —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ.")
    except psycopg2.Error as e:
        print("–û—à–∏–±–∫–∞:", e)
    finally:
        if connection:
            cursor.close()

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
create_sorted_employees_view()

# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–≤—É—Ö —Ç–∞–±–ª–∏—Ü –∏ –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –ø–æ—Å—Ç–æ–≤
def get_users_posts():
    try:
        cursor = connection.cursor()
        get_users_posts_query = """
            SELECT e.id, e.first_name, e.last_name, COALESCE(p.post_count, 0) AS post_count
            FROM Employees e
            LEFT JOIN Posts p ON e.id = p.employee_id
            ORDER BY e.id;
        """
        cursor.execute(get_users_posts_query)
        users_posts = cursor.fetchall()
        print("\n–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ö –ø–æ—Å—Ç–æ–≤:")
        for user_post in users_posts:
            print(user_post)
    except psycopg2.Error as e:
        print("–û—à–∏–±–∫–∞:", e)
    finally:
        if connection:
            cursor.close()

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –ø–æ—Å—Ç–æ–≤
get_users_posts()

# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º–∞—Ä–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–±—â–µ–π —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É –º–µ—Å—è—Ü—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥
def create_orders_summary_materialized_view():
    try:
        cursor = connection.cursor()

        create_materialized_view_query = """
            CREATE MATERIALIZED VIEW OrdersSummary AS
            SELECT
                DATE_TRUNC('month', order_date) AS month,
                COUNT(id) AS order_count,
                SUM(order_count) AS total_count
            FROM Orders
            WHERE EXTRACT(YEAR FROM order_date) = EXTRACT(YEAR FROM CURRENT_DATE)
            GROUP BY DATE_TRUNC('month', order_date);
        """
        cursor.execute(create_materialized_view_query)
        connection.commit()

        print("–ú–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ OrdersSummary —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ.")

    except psycopg2.Error as e:
        print("–û—à–∏–±–∫–∞:", e)
    finally:
        if connection:
            cursor.close()


# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
create_orders_summary_materialized_view()

# –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
if connection:
    connection.close()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
'''
–®–∞–≥ –∑–∞ —à–∞–≥–æ–º. –†–∞–∑–±–æ—Ä –∫–æ–¥–∞, –¥–ª—è –í–∞—Å –∏ –¥–ª—è –º–µ–Ω—è —Å–∞–º–æ–≥–æ –≤ –±—É–¥—É—â–µ–º. –í–µ–¥—å —è —Å–µ–π—á–∞—Å, –Ω–µ —è —á–µ—Ä–µ–∑ –ø–æ–ª –≥–æ–¥–∞.
'''
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 1:
# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.

# –û–ø–∏—Å–∞–Ω–∏–µ: –í —ç—Ç–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö PostgreSQL —Å –∏–º–µ–Ω–µ–º "my_hw_ls_71_db".

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É PostgreSQL
# connection = psycopg2.connect(
#     host="localhost",
#     user="postgres",
#     password="admin",
#     port="5432"
# )

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

# def create_database():
#     try:
#         connection.set_isolation_level(psycopg2.extensions.ISOLATION_LEVEL_AUTOCOMMIT)
#         cursor = connection.cursor()
#         create_database_query = "CREATE DATABASE my_hw_ls_71_db"
#         cursor.execute(create_database_query)
#         print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö my_hw_ls_71_db —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
#     except psycopg2.Error as e:
#         print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö my_hw_ls_71_db:", e)
#     finally:
#         if connection:
#             cursor.close()
#
# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
# create_database()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º PostgreSQL —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —É—á–µ—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
# (—Ö–æ—Å—Ç, –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ø–∞—Ä–æ–ª—å –∏ –ø–æ—Ä—Ç). –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_database(), –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ
# –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –∏–º–µ–Ω–µ–º "my_hw_ls_71_db". –§—É–Ω–∫—Ü–∏—è –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∞ –∑–∞—Ç–µ–º –≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ
# –æ–± —É—Å–ø–µ—à–Ω–æ–º —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø—Ä–∏ –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏—è. –í –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è
# —Ñ—É–Ω–∫—Ü–∏—è create_database(), —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 2:
# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Employees –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—ë –¥–∞–Ω–Ω—ã–º–∏
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Employees.

# –û–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ "Employees" –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö "my_hw_ls_71_db".
# –¢–∞–±–ª–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö, —Ç–∞–∫—É—é –∫–∞–∫ –∏—Ö –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä, –∏–º—è, —Ñ–∞–º–∏–ª–∏—è, –¥–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è,
# –¥–æ–ª–∂–Ω–æ—Å—Ç—å, –ø–æ–ª, —Å–µ–º–µ–π–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ, –Ω–∞–ª–∏—á–∏–µ –¥–µ—Ç–µ–π, —Å—Ç—Ä–∞–Ω–∞, –≥–æ—Ä–æ–¥ –∏ –∑–∞—Ä–ø–ª–∞—Ç–∞. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è
# –¥–∞–Ω–Ω—ã–º–∏ –æ 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Faker –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö.

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–æ–∑–¥–∞–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö

# connection = psycopg2.connect(
#     database="my_hw_ls_71_db",
#     host="localhost",
#     user="postgres",
#     password="admin",
#     port="5432"
# )

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Employees

# def create_employees_table():
#     try:
#         cursor = connection.cursor()
#         create_table_query = """
#             CREATE TABLE IF NOT EXISTS Employees (
#                 id SERIAL PRIMARY KEY,
#                 first_name VARCHAR(50),
#                 last_name VARCHAR(50),
#                 birth_date DATE,
#                 position VARCHAR(50),
#                 gender VARCHAR(10),
#                 marital_status VARCHAR(20),
#                 children BOOLEAN,
#                 country VARCHAR(50),
#                 city VARCHAR(50),
#                 salary NUMERIC
#             );
#         """
#         cursor.execute(create_table_query)
#         connection.commit()
#         print("–¢–∞–±–ª–∏—Ü–∞ Employees —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
#         # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–º–∏
#         fake = Faker()
#         for _ in range(10):  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
#             first_name = fake.first_name()
#             last_name = fake.last_name()
#             birth_date = fake.date_of_birth(minimum_age=18, maximum_age=65)
#             position = fake.job()
#             gender = random.choice(["Male", "Female"])
#             marital_status = random.choice(["Single", "Married"])
#             children = random.choice([True, False])
#             country = fake.country()
#             city = fake.city()
#             salary = round(random.uniform(1000, 5000), 2)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∑–∞—Ä–ø–ª–∞—Ç—ã
#             insert_query = """
#                 INSERT INTO Employees (first_name, last_name, birth_date, position, gender, marital_status, children, country, city, salary)
#                 VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s);
#             """
#             cursor.execute(insert_query, (first_name, last_name, birth_date, position, gender, marital_status, children, country, city, salary))
#         connection.commit()
#         print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É Employees.")
#     except psycopg2.Error as e:
#         print("–û—à–∏–±–∫–∞:", e)
#     finally:
#         if connection:
#             cursor.close()
#
# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –µ—ë –¥–∞–Ω–Ω—ã–º–∏
# create_employees_table()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ —Å–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å —Å–æ–∑–¥–∞–Ω–Ω–æ–π –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö "my_hw_ls_71_db".
# –ó–∞—Ç–µ–º —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_employees_table(), –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã "Employees".
# –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ç–∞–±–ª–∏—Ü—ã –≤–∫–ª—é—á–∞–µ—Ç –≤ —Å–µ–±—è —Å—Ç–æ–ª–±—Ü—ã –¥–ª—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞, –∏–º–µ–Ω–∏, —Ñ–∞–º–∏–ª–∏–∏, –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è, –¥–æ–ª–∂–Ω–æ—Å—Ç–∏, –ø–æ–ª–∞,
# —Å–µ–º–µ–π–Ω–æ–≥–æ –ø–æ–ª–æ–∂–µ–Ω–∏—è, –Ω–∞–ª–∏—á–∏—è –¥–µ—Ç–µ–π, —Å—Ç—Ä–∞–Ω—ã, –≥–æ—Ä–æ–¥–∞ –∏ –∑–∞—Ä–ø–ª–∞—Ç—ã —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
# –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º–∏ –æ 10 —Å–ª—É—á–∞–π–Ω—ã—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Faker
# –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å–ª—É—á–∞–π–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –ö–∞–∂–¥—ã–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü—É —Å –ø–æ–º–æ—â—å—é SQL-–∑–∞–ø—Ä–æ—Å–∞ INSERT INTO,
# –∏—Å–ø–æ–ª—å–∑—É—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–ª—É—á–∞–π–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –í –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_employees_table(),
# —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ—ë –¥–∞–Ω–Ω—ã–º–∏.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 3:
# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Posts –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—ë –¥–∞–Ω–Ω—ã–º–∏
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Posts.

# –û–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ "Posts" –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö "my_hw_ls_71_db".
# –¢–∞–±–ª–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å—Ç–∞—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –≤–∫–ª—é—á–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å—Ç–∞,
# –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ (–≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á), –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º–∏
# –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
# —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10.

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Posts

# def create_posts_table():
#     try:
#         cursor = connection.cursor()
#         create_table_query = """
#             CREATE TABLE IF NOT EXISTS Posts (
#                 id SERIAL PRIMARY KEY,
#                 employee_id INT REFERENCES Employees(id),
#                 post_count INT
#             );
#         """
#         cursor.execute(create_table_query)
#         connection.commit()
#         print("–¢–∞–±–ª–∏—Ü–∞ Posts —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
#         # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–º–∏
#         for employee_id in range(1, 11):  # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
#             post_count = random.randint(1, 10)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –ø–æ—Å—Ç–æ–≤
#             insert_query = """
#                 INSERT INTO Posts (employee_id, post_count)
#                 VALUES (%s, %s);
#             """
#             cursor.execute(insert_query, (employee_id, post_count))
#         connection.commit()
#         print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É Posts.")
#     except psycopg2.Error as e:
#         print("–û—à–∏–±–∫–∞:", e)
#     finally:
#         if connection:
#             cursor.close()
#
# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è –ø–æ—Å—Ç–æ–≤ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –µ—ë –¥–∞–Ω–Ω—ã–º–∏
# create_posts_table()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_posts_table(), –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã "Posts".
# –¢–∞–±–ª–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç—Ä–∏ —Å—Ç–æ–ª–±—Ü–∞: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ—Å—Ç–∞, –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
# (–≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —Ç–∞–±–ª–∏—Ü–µ–π "Employees") –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è
# –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –ø–æ—Å—Ç–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
# –ø–æ—Å—Ç–æ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 10 —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ random.randint(). –ö–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è
# —Å –ø–æ–º–æ—â—å—é SQL-–∑–∞–ø—Ä–æ—Å–∞ INSERT INTO. –í –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_posts_table(), —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å
# —Ç–∞–±–ª–∏—Ü—É –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ—ë –¥–∞–Ω–Ω—ã–º–∏.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 4:
# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Orders –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –µ—ë –¥–∞–Ω–Ω—ã–º–∏
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Orders.

# –û–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ç–∞–±–ª–∏—Ü–∞ "Orders" –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö "my_hw_ls_71_db".
# –¢–∞–±–ª–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–∫–∞–∑–∞—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –≤–∫–ª—é—á–∞—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞, –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
# (–≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á), –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∏ –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞. –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º–∏ –æ
# –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞. –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º –¥–ª—è –∫–∞–∂–¥–æ–≥–æ
# —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 5, –∞ –¥–∞—Ç–∞ –∑–∞–∫–∞–∑–∞ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∫–∞–∫ —Å–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥.

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã Orders

# def create_orders_table():
#     try:
#         cursor = connection.cursor()
#         create_table_query = """
#             CREATE TABLE IF NOT EXISTS Orders (
#                 id SERIAL PRIMARY KEY,
#                 employee_id INT REFERENCES Employees(id),
#                 order_count INT,
#                 order_date DATE
#             );
#         """
#         cursor.execute(create_table_query)
#         connection.commit()
#         print("–¢–∞–±–ª–∏—Ü–∞ Orders —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.")
#         # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã–º–∏
#         fake = Faker()
#         for employee_id in range(1, 11):  # –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫—É
#             order_count = random.randint(1, 5)  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤
#             order_date = fake.date_time_between(start_date='-1y', end_date='now').date()  # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –¥–∞—Ç—ã
#             insert_query = """
#                 INSERT INTO Orders (employee_id, order_count, order_date)
#                 VALUES (%s, %s, %s);
#             """
#             cursor.execute(insert_query, (employee_id, order_count, order_date))
#         connection.commit()
#         print("–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É Orders.")
#     except psycopg2.Error as e:
#         print("–û—à–∏–±–∫–∞:", e)
#     finally:
#         if connection:
#             cursor.close()
#
# # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∑–∞–∫–∞–∑–æ–≤ –∏ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –µ—ë –¥–∞–Ω–Ω—ã–º–∏
# create_orders_table()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_orders_table(), –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã "Orders".
# –¢–∞–±–ª–∏—Ü–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç —á–µ—Ç—ã—Ä–µ —Å—Ç–æ–ª–±—Ü–∞: –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∑–∞–∫–∞–∑–∞, –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞
# (–≤–Ω–µ—à–Ω–∏–π –∫–ª—é—á, —Å–≤—è–∑–∞–Ω–Ω—ã–π —Å —Ç–∞–±–ª–∏—Ü–µ–π "Employees"), –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∏ –¥–∞—Ç—É –∑–∞–∫–∞–∑–∞.
# –ü–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –æ–Ω–∞ –∑–∞–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–∞–Ω–Ω—ã–º–∏ –æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ –∑–∞–∫–∞–∑–æ–≤ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.
# –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ –æ—Ç 1 –¥–æ 5
# —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ random.randint(). –î–ª—è –∫–∞–∂–¥–æ–≥–æ –∑–∞–∫–∞–∑–∞ —Ç–∞–∫–∂–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω–∞—è –¥–∞—Ç–∞ –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö
# –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≥–æ–¥–∞ —Å –ø–æ–º–æ—â—å—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Faker. –ö–∞–∂–¥–∞—è –∑–∞–ø–∏—Å—å –≤ —Ç–∞–±–ª–∏—Ü—É –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è —Å –ø–æ–º–æ—â—å—é SQL-–∑–∞–ø—Ä–æ—Å–∞ INSERT INTO.
# –í –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_orders_table(), —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç—å –µ—ë –¥–∞–Ω–Ω—ã–º–∏.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 5:
# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∑–∞—Ä–ø–ª–∞—Ç—ã
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è SortedEmployees.

# –û–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ "SortedEmployees", –∫–æ—Ç–æ—Ä–æ–µ —Å–æ–¥–µ—Ä–∂–∏—Ç —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤,
# –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∑–∞—Ä–ø–ª–∞—Ç—ã. –î–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
# –≤ –ø–æ—Ä—è–¥–∫–µ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—è –∏—Ö –∑–∞—Ä–∞–±–æ—Ç–Ω–æ–π –ø–ª–∞—Ç—ã.

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤, –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é –∑–∞—Ä–ø–ª–∞—Ç—ã

# def create_sorted_employees_view():
#     try:
#         cursor = connection.cursor()
#         create_view_query = """
#             CREATE OR REPLACE VIEW SortedEmployees AS
#             SELECT * FROM Employees
#             ORDER BY salary;
#         """
#         cursor.execute(create_view_query)
#         connection.commit()
#         print("–ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ SortedEmployees —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ.")
#     except psycopg2.Error as e:
#         print("–û—à–∏–±–∫–∞:", e)
#     finally:
#         if connection:
#             cursor.close()

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
# create_sorted_employees_view()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_sorted_employees_view(),
# –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è "SortedEmployees".
# –ü—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç—Å—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∞–±–ª–∏—Ü—ã "Employees" –∏ —Å–æ–¥–µ—Ä–∂–∏—Ç —Ç–µ –∂–µ —Å—Ç–æ–ª–±—Ü—ã, —á—Ç–æ –∏ —Ç–∞–±–ª–∏—Ü–∞ "Employees".
# –î–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω–æ–≥–æ —Å–ø–∏—Å–∫–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ –≤–æ–∑—Ä–∞—Å—Ç–∞–Ω–∏—é
# –∑–∞—Ä–ø–ª–∞—Ç—ã —Å –ø–æ–º–æ—â—å—é –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ ORDER BY. –í –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_sorted_employees_view(),
# —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 6:
# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–≤—É—Ö —Ç–∞–±–ª–∏—Ü –∏ –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –ø–æ—Å—Ç–æ–≤
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –ø–æ—Å—Ç–æ–≤.

# –û–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü "Employees" –∏ "Posts",
# —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ö –ø–æ—Å—Ç–æ–≤.
# –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –æ–ø–µ—Ä–∞—Ü–∏—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è LEFT JOIN. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ –≤—ã–≤–æ–¥—è—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω.

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è –¥–≤—É—Ö —Ç–∞–±–ª–∏—Ü –∏ –≤—ã–≤–æ–¥–∞ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –ø–æ—Å—Ç–æ–≤

# def get_users_posts():
#     try:
#         cursor = connection.cursor()
#         get_users_posts_query = """
#             SELECT e.id, e.first_name, e.last_name, COALESCE(p.post_count, 0) AS post_count
#             FROM Employees e
#             LEFT JOIN Posts p ON e.id = p.employee_id
#             ORDER BY e.id;
#         """
#         cursor.execute(get_users_posts_query)
#         users_posts = cursor.fetchall()
#         print("\n–°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ö –ø–æ—Å—Ç–æ–≤:")
#         for user_post in users_posts:
#             print(user_post)
#     except psycopg2.Error as e:
#         print("–û—à–∏–±–∫–∞:", e)
#     finally:
#         if connection:
#             cursor.close()

# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –ø–æ—Å—Ç–æ–≤
# get_users_posts()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è get_users_posts(), –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∏—Ö –ø–æ—Å—Ç–æ–≤. –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è SQL-–∑–∞–ø—Ä–æ—Å, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä–µ–¥–∏–Ω—è–µ—Ç —Ç–∞–±–ª–∏—Ü—ã "Employees" –∏ "Posts" —Å
# –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ü–∏–∏ LEFT JOIN –ø–æ –ø–æ–ª—é "id". –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–≤–æ–¥—è—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω –≤
# —Ñ–æ—Ä–º–∞—Ç–µ "id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —Ñ–∞–º–∏–ª–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ—Å—Ç–æ–≤".
# –ï—Å–ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ—Å—Ç–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è COALESCE, —á—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ NULL –Ω–∞ 0.
# –í –∫–æ–Ω—Ü–µ –±–ª–æ–∫–∞ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è get_users_posts() –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 7:
# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º–∞—Ä–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–±—â–µ–π —Å—É–º–º—ã
# –ø–æ –∫–∞–∂–¥–æ–º—É –º–µ—Å—è—Ü—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è OrdersSummary.

# –û–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º —à–∞–≥–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ "OrdersSummary",
# –∫–æ—Ç–æ—Ä–æ–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º–∞—Ä–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–±—â–µ–π —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É –º–µ—Å—è—Ü—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥.
# –î–ª—è —ç—Ç–æ–≥–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–≥—Ä–µ–≥–∏—Ä—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è COUNT –∏ SUM –≤ —Å–æ—á–µ—Ç–∞–Ω–∏–∏ —Å —Ñ—É–Ω–∫—Ü–∏–µ–π GROUP BY,
# –∫–æ—Ç–æ—Ä–∞—è –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ –º–µ—Å—è—Ü–∞–º. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ.

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–¥—Å—á–µ—Ç–∞ —Å—É–º–º–∞—Ä–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –∑–∞–∫–∞–∑–æ–≤ –∏ –æ–±—â–µ–π
# —Å—É–º–º—ã –ø–æ –∫–∞–∂–¥–æ–º—É –º–µ—Å—è—Ü—É –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥

# def create_orders_summary_materialized_view():
#     try:
#         cursor = connection.cursor()
#
#         create_materialized_view_query = """
#             CREATE MATERIALIZED VIEW OrdersSummary AS
#             SELECT
#                 DATE_TRUNC('month', order_date) AS month,
#                 COUNT(id) AS order_count,
#                 SUM(order_count) AS total_count
#             FROM Orders
#             WHERE EXTRACT(YEAR FROM order_date) = EXTRACT(YEAR FROM CURRENT_DATE)
#             GROUP BY DATE_TRUNC('month', order_date);
#         """
#         cursor.execute(create_materialized_view_query)
#         connection.commit()
#
#         print("–ú–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ OrdersSummary —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–æ.")
#
#     except psycopg2.Error as e:
#         print("–û—à–∏–±–∫–∞:", e)
#     finally:
#         if connection:
#             cursor.close()
#
#
# –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è
# create_orders_summary_materialized_view()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ —Å–æ–∑–¥–∞–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏—è create_orders_summary_materialized_view(),
# –∫–æ—Ç–æ—Ä–∞—è –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è "OrdersSummary".
# –í –∑–∞–ø—Ä–æ—Å–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∞–≥—Ä–µ–≥–∏—Ä—É—é—â–∞—è —Ñ—É–Ω–∫—Ü–∏—è COUNT, —á—Ç–æ–±—ã –ø–æ–¥—Å—á–∏—Ç–∞—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤, –∏ —Ñ—É–Ω–∫—Ü–∏—è SUM,
# —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤ –∑–∞ –∫–∞–∂–¥—ã–π –º–µ—Å—è—Ü.
# –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≥—Ä—É–ø–ø–∏—Ä—É—é—Ç—Å—è –ø–æ –º–µ—Å—è—Ü–∞–º —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ DATE_TRUNC('month', order_date).
# –ó–∞—Ç–µ–º –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —É—Å–ª–æ–≤–∏–µ WHERE, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å –∑–∞–∫–∞–∑—ã —Ç–æ–ª—å–∫–æ –∑–∞ —Ç–µ–∫—É—â–∏–π –≥–æ–¥.
# –ü–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ –º–∞—Ç–µ—Ä–∏–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ "OrdersSummary".
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –®–∞–≥ 8:
# –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ó–∞–≥–æ–ª–æ–≤–æ–∫: –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.

# –û–ø–∏—Å–∞–Ω–∏–µ: –í —ç—Ç–æ–º —à–∞–≥–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∑–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ close().

# –ü—Ä–∏–º–µ—Ä –∫–æ–¥–∞:

# # –ó–∞–∫—Ä—ã—Ç–∏–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö
# if connection:
#     connection.close()
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –ü–æ–¥—Ä–æ–±–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ:
# –í —ç—Ç–æ–º –±–ª–æ–∫–µ –∫–æ–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö. –ï—Å–ª–∏ –æ–Ω–æ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç,
# —Ç–æ –≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –º–µ—Ç–æ–¥ close(), –∫–æ—Ç–æ—Ä—ã–π –∑–∞–∫—Ä—ã–≤–∞–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
# –≠—Ç–æ –≤–∞–∂–Ω–æ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π —Ä–∞–±–æ—Ç—ã –∏ –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
# ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ #
# –°–ü–ê–°–ò–ë–û –∑–∞ –≤–Ω–∏–º–∞–Ω–∏–µ! –ù–∞–¥–µ—é—Å—å, —á—Ç–æ –í—ã –ø–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤—É –æ—Ü–µ–Ω–∏—Ç–µ –¥–∞–Ω–Ω—É—é –î–û–ú–ê–®–ù–Æ–Æ –†–ê–ë–û–¢–£ ‚Ññ8 - –æ—Ç 06.05.2024-07.05.2024