-- -- Создание таблицы "Игры"
-- CREATE TABLE Игры (
--     id SERIAL PRIMARY KEY,
--     название VARCHAR(100),
--     жанр VARCHAR(50),
--     цена NUMERIC(10, 2),
--     дата_выпуска DATE,
--     разработчик VARCHAR(100)
-- );

-- -- Создание таблицы "Покупатели"
-- CREATE TABLE Покупатели (
--     id SERIAL PRIMARY KEY,
--     имя VARCHAR(50),
--     фамилия VARCHAR(50),
--     адрес VARCHAR(100),
--     email VARCHAR(100)
-- );

-- -- Создание таблицы "Номера счетов"
-- CREATE TABLE Номера_счетов (
--     id SERIAL PRIMARY KEY,
--     номер_счета VARCHAR(20),
--     сумма NUMERIC(10, 2)
-- );

-- -- Создание таблицы "Сделки"
-- CREATE TABLE Сделки (
--     id SERIAL PRIMARY KEY,
--     id_игры INT,
--     id_покупателя INT,
--     id_счета INT,
--     дата_сделки DATE,
--     FOREIGN KEY (id_игры) REFERENCES Игры(id),
--     FOREIGN KEY (id_покупателя) REFERENCES Покупатели(id),
--     FOREIGN KEY (id_счета) REFERENCES Номера_счетов(id)
-- );

-- -- Создание таблицы "Категории игр"
-- CREATE TABLE Категории_игр (
--     id SERIAL PRIMARY KEY,
--     название VARCHAR(100)
-- );

-- -- Создание таблицы "Связь категорий и игр"
-- CREATE TABLE Связь_категорий_игр (
--     id_игры INT,
--     id_категории INT,
--     FOREIGN KEY (id_игры) REFERENCES Игры(id),
--     FOREIGN KEY (id_категории) REFERENCES Категории_игр(id)
-- );


-- -- Заполнение таблицы "Игры"
-- INSERT INTO Игры (название, жанр, цена, дата_выпуска, разработчик) VALUES
-- ('Ведьмак 3: Дикая Охота', 'RPG', 1999.99, '2015-05-19', 'CD Projekt Red');

-- INSERT INTO Игры (название, жанр, цена, дата_выпуска, разработчик) VALUES
-- ('Сибирь', 'Квест', 799.99, '2002-11-01', 'Microids');

-- INSERT INTO Игры (название, жанр, цена, дата_выпуска, разработчик) VALUES
-- ('Metro 2033', 'Шутер', 1499.99, '2010-03-16', '4A Games');


-- -- Заполнение таблицы "Покупатели"
-- INSERT INTO Покупатели (имя, фамилия, адрес, email) VALUES
-- ('Иван', 'Иванов', 'ул. Пушкина, д. 10, кв. 5', 'ivanov@example.com');

-- INSERT INTO Покупатели (имя, фамилия, адрес, email) VALUES
-- ('Петр', 'Петров', 'ул. Лермонтова, д. 20, кв. 15', 'petrov@example.com');


-- -- Заполнение таблицы "Номера счетов"
-- INSERT INTO Номера_счетов (номер_счета, сумма) VALUES
-- ('123456789', 1999.99);

-- INSERT INTO Номера_счетов (номер_счета, сумма) VALUES
-- ('987654321', 799.99);


-- -- Заполнение таблицы "Сделки"
-- INSERT INTO Сделки (id_игры, id_покупателя, id_счета, дата_сделки) VALUES
-- (1, 1, 1, '2024-04-24');

-- INSERT INTO Сделки (id_игры, id_покупателя, id_счета, дата_сделки) VALUES
-- (2, 2, 2, '2024-04-23');


-- -- Заполнение таблицы "Категории игр"
-- INSERT INTO Категории_игр (название) VALUES
-- ('RPG');

-- INSERT INTO Категории_игр (название) VALUES
-- ('Квест');

-- INSERT INTO Категории_игр (название) VALUES
-- ('Шутер');


-- -- Заполнение таблицы "Связь категорий и игр"
-- INSERT INTO Связь_категорий_игр (id_игры, id_категории) VALUES
-- (1, 1);

-- INSERT INTO Связь_категорий_игр (id_игры, id_категории) VALUES
-- (2, 2);

-- SELECT * FROM Игры WHERE название ILIKE '%Русская%';

-- SELECT Покупатели.имя || ' ' || Покупатели.фамилия AS ФИО, Сделки.дата_сделки, COUNT(*) AS количество_игр
-- FROM Покупатели
-- JOIN Сделки ON Покупатели.id = Сделки.id_покупателя
-- GROUP BY Покупатели.id, Сделки.дата_сделки;

-- SELECT Покупатели.имя || ' ' || Покупатели.фамилия AS ФИО, 
--        CASE WHEN Номера_счетов.сумма > 1000 THEN 'Есть' ELSE 'Нет' END AS Бонусная_скидка
-- FROM Покупатели
-- JOIN Сделки ON Покупатели.id = Сделки.id_покупателя
-- JOIN Номера_счетов ON Сделки.id_счета = Номера_счетов.id;

-- SELECT Игры.название, Игры.жанр
-- FROM Игры
-- JOIN Сделки ON Игры.id = Сделки.id_игры
-- JOIN Покупатели ON Сделки.id_покупателя = Покупатели.id
-- WHERE Покупатели.имя = 'Иван' AND Покупатели.фамилия = 'Иванов';
